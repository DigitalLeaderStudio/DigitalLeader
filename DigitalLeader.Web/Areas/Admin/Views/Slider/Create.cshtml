@model DigitalLeader.ViewModels.SliderViewModel
@using DigitalLeader.ViewModels;
@using DigitalLeader.Web.Extensions;

@{
	ViewBag.Title = "Create";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center">Create new slider</h2>
<hr />
<div class="col-md-6 col-md-offset-2">
	@using (Html.BeginForm("Create", "Slider", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">

			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-3">
					@Html.TextBoxFor(model => model.File, new { @type = "file" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@(Html.LocalizedEditor<SliderViewModel, SliderViewModel.SliderLocalizedModel>
				("slider-localized-title",
				@<div>
					@Html.EditorFor(model => model.Locales[item].Title, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Locales[item].Title, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Locales[item].LanguageId)
				</div>,
					@<div>
						@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
					</div>, true))
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@(Html.LocalizedEditor<SliderViewModel, SliderViewModel.SliderLocalizedModel>
				("slider-localized-Description",
				@<div>
					@Html.EditorFor(model => model.Locales[item].Description, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Locales[item].Description, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Locales[item].LanguageId)
				</div>,
					@<div>
						@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
					</div>, true))
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.BackgroundStyle, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.BackgroundStyle, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.BackgroundStyle, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.HasImage, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.HasImage, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.HasImage, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.TargetLink, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.TargetLink, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.TargetLink, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>
		</div>
	}
	@Html.ActionLink("Back to List", "Index")
</div>